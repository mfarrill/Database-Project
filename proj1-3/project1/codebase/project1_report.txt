1. Basic information
Team number: 8 
Student ID of submitter: 1499743
Student Name of submitter: Michael Farrill
Other Team Members: Allston Mickey, Keith Heacock


2. Internal Record Format

We used a variable-length record format with a directory and additionally, with null flags. The 
directory is an array of field offsets. This allows direct access to each element (an offset) in 
the array in constant time O(1).
 
To store a VarChar field we are allocating memory based off the length of the string (if the field isn’t marked as null). Then to retrieve the VarChar field we calculate its length based off the offset of the next field. A record has the following format:
[ numberOfFields | nullFlags | field1Offset….fieldNOffset| field1...fieldN]

3. Page Format

Our Page format consists of variable length records (identified by record ids), packed free space, 
a slot directory, the number of slots, and the free space offset. Rids contain a page id, indicating 
on what page the record is located, and a slot #, indicating in which index its offset is located in 
the slot directory. Free space is contiguous, making it easier to manage. The slot directory can be 
increased in size, allocating free space and incrementing the slot count. The free space offset 
indicates the beginning of free space, which is neccessary for record insertion and other essential 
functions.  


4. Implementation Detail

- Other implementation details goes here.


5. Other (optional)
- Freely use this section to tell us about other things related to the project 1 (optional)
